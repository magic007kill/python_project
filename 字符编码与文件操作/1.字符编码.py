# ！  C:\Users\熊健熹\AppData\Local\Programs\Python\Python310
# _*_ coding: UTF-8 _*_
'''
@Project :testplay
@File    :1.字符编码.py
@Author  :magic007
@Date    : 11:31
'''
'''
什么是字符编码？
  把人类读懂的语言转化为计算机识别的二进制代码
  过程：字符--->翻译过程--->二进制
  如何一个字符对应一个特定的二进制编码的标准，就是字符编码
  
  ASCII编码: 用一个字节（可以表示2^8个字符）表示一个英文字符（一般智能表示英文）
  
  GB2312：中国人规定的中文标准编码，包含中文在内的字符->二进制对应关系，但是范围比较窄
  GBK：用3个字节表示的中文在内的字符编码
  
  shift_JIS:日本人规定的自己的字符编码
  Euc-kr：韩国人规定的自己的字符编码
  
  unicode: 世界统一标准的字符编码标准，它是存在内存里的统一编码。
           用两个字节表示一个标准字符，用4个字节表示生僻字符。
           用其表示英文会比ASCII耗费多一倍的空间，传输和存储上也十分低效。
   
  UTF-8: 是运用在硬盘上的编码。兼顾了统一性和空间及传输的高效性。
         UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用英文字母被编码为1个字节
         汉字同常是3个字节，只有很生辟的字符才会被编码成4-6个字节
         如:
         字符              ASCII                 Unicode                   UTF-8
          A          00000000 01000001           01000001
          中                没有             11100100 01001110 00101101    11100100 01001110 00101101
          
          简单来说英文字母UTF-8使用的和ASCII对应关系一样
          而中文UTF-8使用Unicode对应关系        
              
  unicode和UTF-8的关系
    1.在存入磁盘时，需要将unicode转成一种更为精准的格式，
        UTF-8：全称Unicode Transformation Format,将数据量控制到最精简
    2.在读入内存时，需要将utf-8转成unicode
        所以我们需要明确：内存中用unicode是为了兼容万国软件
        即使硬盘中有各国的编码编写的软件，unicode也有相对应的映射关系
        但在现在的开发中，程序员普遍使用utf-8编码了，可以预计以后必然是：
        内存unicode<->硬盘utf-8的形式了
        
   
'''



